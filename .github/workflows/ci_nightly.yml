name: CI_nightly

on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'test/**'
      - 'example/**'
      - 'Project.toml'
      - '.github/workflows/ci_nightly.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'test/**'
      - 'example/**'
      - 'Project.toml'

env:
  JULIA_NUM_THREADS: 1

jobs:
  # test:
  #   name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       version:
  #         - 'nightly'
  #       os:
  #         - ubuntu-latest
  #         - windows-latest
  #         - macos-latest
  #       arch:
  #         - x86
  #         - x64
  #       exclude:
  #         - os: ubuntu-latest
  #           arch: x86
  #         - os: macos-latest
  #           arch: x86
  #         - os: windows-latest
  #           arch: x86
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: julia-actions/setup-julia@v1
  #       with:
  #         version: ${{ matrix.version }}
  #         arch: ${{ matrix.arch }}
  #     - uses: actions/cache@v1
  #       env:
  #         cache-name: cache-artifacts
  #       with:
  #         path: ~/.julia/artifacts
  #         key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-test-${{ env.cache-name }}-
  #           ${{ runner.os }}-test-
  #           ${{ runner.os }}-
  #     - uses: julia-actions/julia-buildpkg@v1
  #       env:
  #         PYTHON: ""
  #     - uses: julia-actions/julia-runtest@v1
  #       env:
  #         PYTHON: ""
